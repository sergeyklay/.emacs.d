#! /usr/bin/perl -w
# emacsclient.wrapper - Emacs terminal wrapper script
#
# Copyright (C) 2019, 2020, 2021, 2022 Serghei Iakovlev <egrep@protonmail.ch>
#
# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# Usage
# =====
#
# Copy this wrapper to a common path:
#
#     cp emacsclient.wrapper /usr/local/bin
#
# Git config
# ----------
#
# git config --global core.editor emacsclient.wrapper
#
#
# .profile/.zshenv
# ----------------
#
# export ALTERNATE_EDITOR=''
# export EDITOR=emacsclient.wrapper
# export VISUAL=$EDITOR
#
# Ubuntu/Debian
# -------------
#
# 1. Install it with ``update-alternatives --install'':
#
#     update-alternatives --install /usr/bin/editor editor \
#             /usr/local/bin/emacsclient.wrapper 20
#
# 2. Configure editor to be this wrapper:
#
#     update-alternatives --set editor \
#             /usr/local/bin/emacsclient.wrapper
#
# Fedora/CentOS
# -------------
#
# 1. Install it with ``alternatives --install'':
#
#     alternatives --install /usr/bin/editor editor \
#            /usr/local/bin/emacsclient.wrapper 20
#
# 2. Configure editor to be this wrapper:
#
#     alternatives --set editor /usr/local/bin/emacsclient.wrapper
#
# To run GNU Emacs in server mode see:
# https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html

use strict;

# Emacs arguments.
my @args;

# Will be just `emacs' if there is a SSH session opened.
my $program = 'emacsclient';

# Editor to fallback to if the server is not running.
# If empty, start Emacs in daemon mode and try connecting again.
my $alt = $ENV{'ALTERNATE_EDITOR'} || '';

# Do not use emacsclient on SSH sessions.
if (defined $ENV{'SSH_CONNECTION'}) {
  $program = 'emacs';
}

# Parse arguments.
while (my $opt = shift(@ARGV)) {
    # Remove possible duplicates for emacsclient.
    if (grep(/^-(?:nw|(?:t|-tty))$/, $opt) && $program ne 'emacs') {
	next;
    }

    # Allow ``-a EDITOR'' only in client-server mode.
    if ($opt eq '-a') {
	my $arg = shift(@ARGV);
	if ($program eq 'emacsclient') {
	    $alt = $arg;
	}

	next;
    } elsif (grep(/^--alternate-editor=(.*)$/, $opt)) {
	$opt =~ /^--alternate-editor=(.*)$/;
	if ($program eq 'emacsclient') {
	    $alt = $1;
	}
    } else {
	unshift(@args, $opt);
    }
}

if ($program ne 'emacs') {
    # Open a new Emacs frame on the current terminal.
    unshift(@args, '--tty');

    # Use alternate editor only if there is no SSH session.
    unshift(@args, "--alternate-editor='$alt'");
}

exec($program, @args);
